@import "../../base/definition.scss";
@import "../../program/state/is-state.scss";

// label
.el_title {
  position: relative;
  font-size: rem(20);
  text-shadow: 1px 1px 1px rgba(black, 0.2);
  margin: auto 3px;

  &.el_title_large {
    font-size: rem(28);
  }
}

.el_todoTitle {
  background-color: $baseColor;
  font-size: rem(14);
  margin: 11px 3px 2px 3px;
}

.el_todo_head {
  margin: auto;
  width: 12px;
  height: 80%;
}

.el_label {
  font-size: rem(16);
  margin: auto; // 中央配置
  &.el_label__large {
    font-size: rem(18);
  }
  &.el_label__small {
    font-size: rem(12);
  }
  &.el_label__xxsmall {
    font-size: xx-small;
    color: gray;
  }
}

.el_sortLabel {
  width: 70%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -130%) skew(-10deg);
  white-space: nowrap;
}
.el_sortLabel.el_sortLabel__blue {
  @include sortBtnLabelStyle($waitingColor);
}
.el_sortLabel.el_sortLabel__green {
  @include sortBtnLabelStyle($inprogressColor);
}
.el_sortLabel.el_sortLabel__red {
  @include sortBtnLabelStyle($completedColor);
}
.el_sortLabel.el_sortLabel__yellow {
  @include sortBtnLabelStyle($pendingColor);
}

// button
.el_btn {
  border-radius: 5px;
  width: 120px;
  height: 25px;
  font-size: rem(14);
  box-shadow: 1px 1px 2px 0.5px rgba(0, 0, 0, 0.25);
  background-color: white;
  border: 1px solid black;
  transition: all 0.3s ease 0s;
  &:hover,
  &:focus {
    opacity: 0.7;
    background-color: black;
    color: white;
  }
}

.el_navBtn {
  position: relative;
  width: 95%;
  height: 100%;
  margin: 1px 0;
  border: 3px double white;
  background-color: darken($baseColor, 1%);
  transition: all 0.3s ease 0s;
  &:hover,
  &:focus {
    opacity: 0.6;
    background-color: saturate($baseColor, 50%);
  }
}

.el_createBtn {
  position: absolute;
  top: 50%;
  right: 50px;
  transform: translateY(-50%);

  width: 150px;
  height: 30px;
  border-radius: 3px;
  background-color: black;
  color: white;
  opacity: 0.7;
  box-shadow: 1px 1px 2px 0.5px rgba(0, 0, 0, 0.25);

  transition: all 0.6s ease 0s;
  &:hover,
  &:focus {
    opacity: 0.8;
    font-weight: bold;
    background-color: white;
    border-radius: 0px;
    color: black;
  }

  &::before,
  &::after {
    content: "";
    position: absolute;
    height: 2px;
    width: 0;
    opacity: 0.7;
    background: black;
    transition: all 300ms ease;
  }
  &::before {
    top: 0;
    right: 0;
  }
  &::after {
    //right: inherit;
    //top: inherit;
    left: 0;
    bottom: 0;
  }
  &:hover::before,
  &:hover:after {
    width: 100%;
    transition: all 600ms ease;
  }
}

// simbol
.el_barIcon {
  // インライン中央寄せ
  display: table-cell;
  vertical-align: middle;

  &.el_barIcon__shrink {
    transform: scaleX(0.5);
  }
  &:hover,
  &:focus {
    cursor: pointer;
  }
}

.el_decoreFirst {
  position: relative;
  width: 15px;
  margin-right: 10px;

  &::after {
    // 後ろに三角形追加
    position: absolute;
    left: 10px;
    content: "";
    width: 10px;
    height: 50px;
    transform: skewX(-10deg);
  }
}

.el_decoreFirst.is_waiting {
  @extend .is_waiting;
  &::after {
    @extend .is_waiting;
  }
}
.el_decoreFirst.is_inprogress {
  @extend .is_inprogress;
  &::after {
    @extend .is_inprogress;
  }
}
.el_decoreFirst.is_completed {
  @extend .is_completed;
  &::after {
    @extend .is_completed;
  }
}
.el_decoreFirst.is_pending {
  @extend .is_pending;
  &::after {
    @extend .is_pending;
  }
}

.el_decoreSecond {
  width: 5px;
  margin-right: 5px;
  transform: skewX(-10deg);
}

// empty
.el_emptyItem {
  height: 12px;
  margin: 0 15px;
}

.el_svglink {
  display: inline-block;
  margin-right: 5px;
  & > object {
    // object要素のクリックを無効にしてa要素クリックを有効にする
    pointer-events: none;
  }

  &:hover {
    opacity: 0.5;
  }
}
